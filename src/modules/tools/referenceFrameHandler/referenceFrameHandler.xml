<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="yarpmanifest.xsl"?>
 
<module>

   <name>referenceFrameHandler</name>
   <doxygen-group>icubclient_modules</doxygen-group>
   <description>Reference Frame Handler</description>
   <copypolicy>Released under the terms of the GNU GPL v2.0</copypolicy>
   <version>1.0</version>
   
   <description-long>
   Module responsible for handling the conversion between multiple reference frame (e.g multiple kinects, tactile table, etc)
   </description-long>

   <arguments>
   <param default="referenceFrameHandler" desc="To specify the module's name; all the open ports will be tagged with the prefix /name">name</param>
   <param default="referenceFrameHandler" desc="file to be used for loading/saving purposes of the matrices">matricesFile</param>
   <param default="referenceFrameHandler" desc="starts the module without trying to load matrices from the file. (they can still be saved afterward)">empty</param>
   <param default="referenceFrameHandler" desc="To specify if debug information should be printed on the stdio">verbose</param>

   </arguments>

   <authors>
       <author email="stephane.lallee@gmail.com"> Stéphane Lallée </author>
   </authors>
   
   <services>
       <server>
           <port>/referenceFrameHandler/rpc</port>
           <description>It is the way to interact with the module. Commands are: \n
           "add frameName (x y z) (x' y' z')": add a calibration pair (xyz in frameName's reference, x'y'z' in iCub pivot reference); reply is [ack/nack]. \n
           "cal frameName": calibrate and find the transformation matrix between frameName's reference and iCub pivot reference; reply is [ack]. \n
           "scal frameName": calibrate and find H and S between frameName's reference and iCub pivot reference; reply is [ack]. \n
           "trans frameName1 frameName2 (x y z)": transform the point (x y z) given in frameName1's reference into the frameName2's reference; reply is [ack] (x' y' z')
           (e.g : trans kinect reactable (0 0 0) Will return the position of the origin of the kinect reference into the reactable reference). \n
           "mat frameName1 frameName2": get the transformation matrix from frameName1 to frameName2; reply is [ack] (m00 m01 ... m32 m33). \n
           "smat frameName1 frameName2": set the transformation matrix from frameName1 to frameName2; reply is [ack]. \n
           "save": save all the calibrated frames to a file; reply is [ack] filePath. \n
           "opcr": read all the frames contained in the OPC; reply is [ack]. \n
           "opcw": write all the calibrated frames to the OPC; reply is [ack].
           </description>
       </server>
   </services>
   
</module>

/**
*
* \defgroup icubhri_facerecog Face Recognition Tutorial: Collecting data and training
* \brief This provides a tutorial on how to create your own face recognition model with SAM

##Prerequisites

To follow this tutorial you need to have:

- A `SAM_Data_Models` folder set up with the structure indicated in <a href="https://github.com/robotology/icub-client/blob/master/src/modules/SAM/README.md">SAM README</a>.

- You also need human-sensing-SAM installed and running. Follow the instructions in <a href="https://github.com/dcam0050/human-sensing-SAM/blob/master/README.md">human-Sensing-SAM git repo</a> 

##Data Collection

__Step 1__: First run:

\verbatim CLMYarp --from $CLM_MODEL_DIR 
yarp connect <imagePort> /CLM/image/in udp+mjpeg \endverbatim

where `<imagePort>` is the yarp port sending images from a camera. Example one of the icub's eyes `/icub/cam/left` or a webcam using `yarpdev opencv_grabber`. The above instructions launch and connect CLMYarp and you should start seeing segmented faces shown on screen. At this point prepare the subject to be recorded in front of the camera being used.

__Step 2__: Go to SAM_Data_Models/Data/<myFacesFolder> directory from the terminal and from this directory run 

\verbatim yarpdatadumper --name /samRecogDumper/faces_in --type image --rxTime --dir <faceName>
yarp connect /CLM/imageSeg/out /samRecogDumper/faces_in udp\endverbatim

where `<faceName>` is the name of the person being recorded. As soon as you make the connection, open your file manager and monitor the amount of images being stored. Terminate _yarpdatadumper_ when the amount of required images is reached: 300-500 images is usually a good amount for training.

Repeat __Step 2__ for each person that is to be trained, changing `<faceName>` each time such that each person has a separate images folder

##Training

For training, run samSupervisor.py from the command line and connect to it using 
\verbatim yarp rpc /sam/rpc:i \endverbatim

Then if you send a _check_all_ command you should see <myFacesFolder> listed as available for training. To train, send a _train <myFacesFolder>_ command and this will perform the training.

* (This page can be edited at src/doc/facerecognitiontutorial.dox)
*/
